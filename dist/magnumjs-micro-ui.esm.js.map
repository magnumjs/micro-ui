{
  "version": 3,
  "sources": ["../lib/diffHTML.js", "../lib/bindEvents.js", "../lib/get-refs.js", "../lib/injectSlotContent.js", "../lib/hydrateSlots.js", "../lib/hydrateActions.js", "../lib/reactive-core-helpers/runHook.js", "../lib/reactive-core-helpers/runBeforeHook.js", "../lib/reactive-core-helpers/syncInstanceToAPI.js", "../lib/reactive-core.js"],
  "sourcesContent": ["\r\n// diffHtml.js\r\n\r\n\r\n\r\nexport default function diffHTML(el, newHTML) {\r\n  if (!el) return false;\r\n\r\n  const temp = document.createElement(\"div\");\r\n  temp.innerHTML = newHTML;\r\n\r\n  // If both old and new are just text, patch safely\r\n  if (\r\n    temp.children.length === 0 &&\r\n    el.children.length === 0 &&\r\n    temp.textContent\r\n  ) {\r\n    if (el.textContent !== temp.textContent) {\r\n      el.textContent = temp.textContent;\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  const newChildren = Array.from(temp.children);\r\n  const oldChildren = Array.from(el.children);\r\n  // add data-key if present in el to first child if only one child and it doesn't have it\r\n  if (newChildren.length === 1 && el.dataset.key && !newChildren[0]?.dataset.key) {\r\n    newChildren[0].dataset.key = el.dataset.key;\r\n  }\r\n\r\n  const newKeyed = new Map();\r\n  const oldKeyed = new Map();\r\n\r\n  for (const child of newChildren) {\r\n    const key = child.dataset.key;\r\n    if (key) newKeyed.set(key, child);\r\n  }\r\n\r\n  for (const child of oldChildren) {\r\n    const key = child.dataset.key;\r\n    if (key) oldKeyed.set(key, child);\r\n  }\r\n\r\n  let cursor = 0;\r\n  for (const newChild of newChildren) {\r\n    const key = newChild.dataset.key;\r\n    let currentNode = el.children[cursor];\r\n\r\n    if (key && oldKeyed.has(key)) {\r\n      const existing = oldKeyed.get(key);\r\n\r\n      // Patch instead of replace, unless it's a component root\r\n      if (!existing.hasAttribute(\"data-comp-root\")) {\r\n        patchElement(existing, newChild);\r\n      }\r\n\r\n      if (existing !== currentNode) {\r\n        el.insertBefore(existing, currentNode || null);\r\n      }\r\n\r\n      oldKeyed.delete(key);\r\n    } else {\r\n      el.insertBefore(newChild, currentNode || null);\r\n    }\r\n\r\n    cursor++;\r\n  }\r\n\r\n  // Remove old keyed children that weren't reused\r\n  for (const leftover of oldKeyed.values()) {\r\n    // Do not auto-remove component roots (let unmount handle it)\r\n    if (leftover.hasAttribute(\"data-comp-root\")) continue;\r\n    leftover.remove();\r\n  }\r\n\r\n  // Trim any excess non-keyed children\r\n  while (el.children.length > newChildren.length) {\r\n    const last = el.lastChild;\r\n    if (last?.hasAttribute?.(\"data-comp-root\")) break;\r\n    last.remove();\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction patchElement(fromEl, toEl) {\r\n  if (fromEl.tagName !== toEl.tagName) {\r\n    fromEl.replaceWith(toEl.cloneNode(true));\r\n    return;\r\n  }\r\n\r\n  syncAttributes(fromEl, toEl);\r\n\r\n  // Skip inside if it's a component boundary\r\n  if (fromEl.hasAttribute(\"data-comp-root\")) return;\r\n\r\n  patchChildren(fromEl, toEl);\r\n}\r\n\r\nfunction syncAttributes(fromEl, toEl) {\r\n  const fromAttrs = fromEl.attributes;\r\n  const toAttrs = toEl.attributes;\r\n\r\n  for (const { name } of Array.from(fromAttrs)) {\r\n    if (!toEl.hasAttribute(name)) {\r\n      fromEl.removeAttribute(name);\r\n    }\r\n  }\r\n\r\n  for (const { name, value } of Array.from(toAttrs)) {\r\n    if (fromEl.getAttribute(name) !== value) {\r\n      fromEl.setAttribute(name, value);\r\n    }\r\n  }\r\n}\r\n\r\nexport function patchChildren(fromEl, toEl) {\r\n  const fromNodes = Array.from(fromEl.childNodes);\r\n  const toNodes = Array.from(toEl.childNodes);\r\n  const max = Math.max(fromNodes.length, toNodes.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    const fromNode = fromNodes[i];\r\n    const toNode = toNodes[i];\r\n\r\n    if (!toNode && fromNode) {\r\n      // skip if component boundary\r\n      if (fromNode.nodeType === 1 && fromNode.hasAttribute(\"data-comp-root\")) {\r\n        continue;\r\n      }\r\n      fromEl.removeChild(fromNode);\r\n      continue;\r\n    }\r\n\r\n    if (!fromNode && toNode) {\r\n      fromEl.appendChild(toNode.cloneNode(true));\r\n      continue;\r\n    }\r\n\r\n    patchNode(fromNode, toNode);\r\n  }\r\n}\r\n\r\nfunction patchNode(fromNode, toNode) {\r\n  if (fromNode.isEqualNode(toNode)) return;\r\n\r\n  if (fromNode.nodeType !== toNode.nodeType) {\r\n    fromNode.replaceWith(toNode.cloneNode(true));\r\n    return;\r\n  }\r\n\r\n  if (fromNode.nodeType === Node.TEXT_NODE) {\r\n    if (fromNode.nodeValue !== toNode.nodeValue) {\r\n      fromNode.nodeValue = toNode.nodeValue;\r\n    }\r\n  } else if (\r\n    fromNode.nodeType === Node.ELEMENT_NODE &&\r\n    fromNode.tagName === toNode.tagName\r\n  ) {\r\n    patchElement(fromNode, toNode);\r\n  } else {\r\n    fromNode.replaceWith(toNode.cloneNode(true));\r\n  }\r\n}\r\n\r\n\r\n", "export default function bindEvents(api, el, on, boundEvents) {\r\n  if (!el || !el.children[0] || !on) return;\r\n  const root = el.children.length > 1 ? el : el.children[0];\r\n\r\n  // Find the closest ancestor (up to root) that has either data-action\r\n  // or any attribute that starts with data-action- (e.g. data-action-click)\r\n  function closestWithActionAttr(startEl, boundary) {\r\n    for (\r\n      let el = startEl;\r\n      el && el !== boundary.parentNode;\r\n      el = el.parentElement\r\n    ) {\r\n      if (!el || !el.hasAttributes || !el.hasAttributes()) continue;\r\n      for (const attr of el.attributes) {\r\n        if (\r\n          attr.name === \"data-action\" ||\r\n          attr.name.startsWith(\"data-action-\")\r\n        ) {\r\n          return el;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function traverse(node, isRoot = false) {\r\n    if (!node) return;\r\n    // Stop at component boundaries, except for the root node itself\r\n    if (!isRoot && node.hasAttribute && node.hasAttribute(\"data-comp-root\")) {\r\n      return;\r\n    }\r\n\r\n    Object.entries(on).forEach(([key, handler]) => {\r\n      const isColonSyntax = key.includes(\":\");\r\n      const [eventType, actionOrSelector] = isColonSyntax\r\n        ? key.split(\":\")\r\n        : key.split(\" \");\r\n\r\n      const isWildcardEvent = eventType === \"*\";\r\n      const eventsToBind = isWildcardEvent\r\n        ? [\"click\", \"input\", \"change\", \"keydown\", \"submit\"]\r\n        : [eventType];\r\n\r\n      eventsToBind.forEach((type) => {\r\n        const listener = (e) => {\r\n          const actionTarget = closestWithActionAttr(e.target, root);\r\n          // Prefer event-specific: data-action-click / data-args-click\r\n          // Fallback to generic:   data-action        / data-args\r\n          let actionValue = \"\";\r\n          let dataArgsRaw = \"\";\r\n\r\n          if (actionTarget) {\r\n            const specificActionAttr = `data-action-${e.type}`;\r\n            const specificArgsAttr = `data-args-${e.type}`;\r\n\r\n            actionValue =\r\n              actionTarget.getAttribute(specificActionAttr) ??\r\n              actionTarget.getAttribute(\"data-action\") ??\r\n              \"\";\r\n\r\n            dataArgsRaw =\r\n              actionTarget.getAttribute(specificArgsAttr) ??\r\n              actionTarget.getAttribute(\"data-args\") ??\r\n              \"\";\r\n          }\r\n\r\n          const actionParts = actionValue.split(\":\");\r\n          const actionName = actionParts[0];\r\n          let actionArgs = [];\r\n\r\n          // Prefer data-args if present\r\n          if (dataArgsRaw) {\r\n            try {\r\n              const parsed = JSON.parse(dataArgsRaw);\r\n              actionArgs = Array.isArray(parsed) ? parsed : [parsed];\r\n            } catch (err) {\r\n              console.warn(\"Invalid JSON in data-args:\", dataArgsRaw);\r\n            }\r\n          } else {\r\n            actionArgs = actionParts.slice(1);\r\n          }\r\n\r\n          const context = {\r\n            ...e.target.dataset,\r\n            event: e,\r\n            state: api.state,\r\n            setState: api.setState,\r\n            props: api.props,\r\n            refs: api.refs,\r\n            action: actionName,\r\n            args: actionArgs,\r\n          };\r\n\r\n          // Action handler\r\n          if (isColonSyntax && actionTarget) {\r\n            const matches =\r\n              (actionOrSelector === \"*\" || actionOrSelector === actionName) &&\r\n              (isWildcardEvent || e.type === eventType);\r\n            if (matches) {\r\n              return handler.call(api, context);\r\n            }\r\n          }\r\n\r\n          // Fallback to selector-based if no action match\r\n          if (!isColonSyntax) {\r\n            const target = e.target.closest(actionOrSelector || \"*\");\r\n            if (target && root.contains(target)) {\r\n              return handler.call(api, context);\r\n            } else {\r\n              // console.warn(\r\n              //   `No matching element: found for selector: ${actionOrSelector}`\r\n              // );\r\n              return;\r\n            }\r\n          }\r\n        };\r\n\r\n        const marker = `__microBound_${type}_${key}`;\r\n        if (!root[marker]) {\r\n          root.addEventListener(type, listener);\r\n          root[marker] = true;\r\n          boundEvents.push({ node: root, type, listener });\r\n        }\r\n      });\r\n    });\r\n\r\n    for (const child of node.children) {\r\n      traverse(child, false);\r\n    }\r\n  }\r\n  traverse(el, true);\r\n}\r\n", "const refCache = new WeakMap(); // Cache per boundary root\r\n\r\nexport default function ref(boundaryRoot, name) {\r\n  if (!boundaryRoot) return null;\r\n\r\n  // Ensure we're always operating within the correct component boundary\r\n  if (!boundaryRoot.hasAttribute(\"data-comp-root\")) {\r\n    throw new Error(\"ref() must be called with a component root element\");\r\n  }\r\n\r\n  // 1. Check scoped cache\r\n  let cacheForBoundary = refCache.get(boundaryRoot);\r\n  if (!cacheForBoundary) {\r\n    cacheForBoundary = {};\r\n    refCache.set(boundaryRoot, cacheForBoundary);\r\n  }\r\n\r\n  if (cacheForBoundary[name]) {\r\n    const cached = cacheForBoundary[name];\r\n    if (cached.isConnected && boundaryRoot.contains(cached)) {\r\n      return cached; // valid cached ref\r\n    } else {\r\n      delete cacheForBoundary[name]; // stale\r\n    }\r\n  }\r\n\r\n  // in get refs 1\uFE0F\u20E3 Check for a component instance via data-key\r\n  const compEl = boundaryRoot.querySelector(`[data-key=\"${name}\"]`);\r\n  if (compEl && compEl._componentInstance) {\r\n    cacheForBoundary[name] = compEl._componentInstance;\r\n    return compEl._componentInstance;\r\n  }\r\n  // 2\uFE0F\u20E3 Fallback to DOM refs (existing behavior)\r\n\r\n  // 2. Search only inside this boundary root\r\n  const selectors = [\r\n    `[data-ref=\"${name}\"]`,\r\n    `[data-slot=\"${name}\"]`,\r\n    `slot[name=\"${name}\"]`,\r\n    `slot:not([name])`,\r\n    `${name}`, // allow names, but scoped\r\n    `#${name}`, // allow ids, but scoped\r\n  ];\r\n\r\n  function isInCurrentBoundary(el, boundaryRoot) {\r\n    if (el === boundaryRoot) return true;\r\n    const nestedRoot = el.closest(\"[data-comp-root]\");\r\n    return !nestedRoot || nestedRoot === boundaryRoot;\r\n  }\r\n\r\n  for (const selector of selectors) {\r\n    let found = null;\r\n    try {\r\n      const allMatches = boundaryRoot.querySelectorAll(selector);\r\n      for (const el of allMatches) {\r\n        if (isInCurrentBoundary(el, boundaryRoot)) {\r\n          found = el;\r\n          break;\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.warn(`ref() invalid selector: ${selector} for ref name ${name}`);\r\n      //throw new Error(`ref() invalid selector: ${selector} for ref name ${name}`);\r\n    }\r\n    if (found) {\r\n      cacheForBoundary[name] = found;\r\n      return found;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n", "// injectSlotContent.js\r\nconst slotContentCache = new WeakMap();\r\n\r\nexport default function injectSlotContent(refNode, value, api) {\r\n  // Remove previous injected content if slot is null/undefined\r\n  if (!refNode || value === null) {\r\n    return;\r\n  }\r\n\r\n  // Use refNode as cache key\r\n  if (slotContentCache.has(refNode)) {\r\n    const cached = slotContentCache.get(refNode);\r\n    if (cached.value === value) {\r\n      // Already injected, skip\r\n      return;\r\n    }\r\n  }\r\n\r\n  let resolved = typeof value === \"function\" ? value() : value;\r\n\r\n  // Unwrap { default: ... } for default slot\r\n  if (\r\n    refNode.nodeName === \"SLOT\" &&\r\n    !refNode.hasAttribute(\"name\") &&\r\n    resolved &&\r\n    typeof resolved === \"object\" &&\r\n    \"default\" in resolved\r\n  ) {\r\n    resolved = resolved.default;\r\n  }\r\n  // Array of items\r\n  if (Array.isArray(resolved)) {\r\n    // Find parent node to manipulate children\r\n    const parent = refNode.parentNode;\r\n    if (!parent) return;\r\n\r\n    // Build a map of current keyed children\r\n    const existingNodes = {};\r\n    Array.from(parent.children).forEach((child) => {\r\n      const key = child.getAttribute && child.getAttribute(\"data-key\");\r\n      if (key != null) existingNodes[key] = child;\r\n    });\r\n\r\n    // Prepare new order of nodes\r\n    const newNodes = [];\r\n    resolved.forEach((origItem) => {\r\n      let item = typeof origItem === \"function\" ? origItem() : origItem;\r\n      let node = null;\r\n      let key = item?.props?.key ?? (item?.el?.getAttribute && item.el.getAttribute(\"data-key\"));\r\n      if (key != null && existingNodes[key]) {\r\n        // Move existing node\r\n        node = existingNodes[key];\r\n        if (item && typeof item.update === \"function\") item.update();\r\n      } else if (item && typeof item.mount === \"function\") {\r\n        const temp = document.createElement(\"div\");\r\n        item.mount(temp);\r\n        node = item.el instanceof HTMLElement ? item.el : temp;\r\n        if (!api._mountedChildren.includes(item)) {\r\n          api._mountedChildren.push(item);\r\n        }\r\n      } else if (item?.el instanceof HTMLElement) {\r\n        node = item.el;\r\n      } else if (item instanceof Node) {\r\n        node = item;\r\n      } else if (typeof item === \"string\") {\r\n        const temp = document.createElement(\"div\");\r\n        temp.innerHTML = item;\r\n        node = temp.firstChild;\r\n      }\r\n      if (node) newNodes.push(node);\r\n    });\r\n\r\n    // Remove refNode placeholder\r\n    if (parent.contains(refNode)) parent.removeChild(refNode);\r\n\r\n    // Reorder/move nodes in parent\r\n    newNodes.forEach((node, idx) => {\r\n      if (parent.children[idx] !== node) {\r\n        parent.insertBefore(node, parent.children[idx] || null);\r\n      }\r\n    });\r\n\r\n    // Remove any extra nodes not in newNodes\r\n    Array.from(parent.children).forEach((child) => {\r\n      if (!newNodes.includes(child)) parent.removeChild(child);\r\n    });\r\n\r\n    slotContentCache.set(refNode, { value });\r\n    return;\r\n  }\r\n\r\n  // Single item logic\r\n  if (resolved && typeof resolved.mount === \"function\") {\r\n    if (resolved.isMounted()) {\r\n      // Reuse instead of remount\r\n      resolved.update();\r\n      // Ensure DOM position is correct\r\n      if (resolved.el !== refNode) {\r\n        refNode.replaceWith(resolved.el);\r\n      }\r\n    } else {\r\n      // First mount\r\n      const temp = document.createElement(\"div\");\r\n      refNode.replaceWith(temp);\r\n      resolved.mount(temp);\r\n      if (resolved.el === refNode) {\r\n        resolved.el = temp;\r\n      }\r\n    }\r\n    if (!api._mountedChildren.includes(resolved)) {\r\n      api._mountedChildren.push(resolved);\r\n    }\r\n  } else if (resolved?.el instanceof HTMLElement) {\r\n    refNode.replaceWith(resolved.el);\r\n  } else if (resolved instanceof Node) {\r\n    refNode.replaceWith(resolved);\r\n  } else if (typeof resolved === \"string\") {\r\n    // Replace slot with HTML nodes (not just text)\r\n    const temp = document.createElement(\"div\");\r\n    temp.innerHTML = resolved;\r\n    // Insert all children, not just the first\r\n    const fragment = document.createDocumentFragment();\r\n    while (temp.firstChild) {\r\n      fragment.appendChild(temp.firstChild);\r\n    }\r\n    refNode.replaceWith(fragment);\r\n  } else {\r\n    refNode.replaceWith(document.createTextNode(\"\"));\r\n  }\r\n  // After replacing slot content, cache the value\r\n\r\n  slotContentCache.set(refNode, { value });\r\n}\r\n", "// hydrateSlots.js\r\nimport getRef from \"./get-refs\";\r\nimport injectSlotContent from \"./injectSlotContent\";\r\nimport { getComponentById } from \"./reactive-core\";\r\n\r\nexport default function hydrateSlots(componentFn, props, api, initialSlots) {\r\n  // Resolve initial slots (can be object or function)\r\n  let dynamicSlots =\r\n    typeof initialSlots === \"function\"\r\n      ? initialSlots.call(api, props)\r\n      : typeof initialSlots === \"object\"\r\n      ? initialSlots\r\n      : {};\r\n\r\n  // Merge with props.slots\r\n  let slotEntries = { ...dynamicSlots, ...(props.slots || {}) };\r\n\r\n  // If slots is a component or array, treat as default\r\n  if (\r\n    typeof props.slots === \"function\" ||\r\n    Array.isArray(props.slots)\r\n    // ||    (props.slots && typeof props.slots === \"object\" && !(\"default\" in props.slots))\r\n  ) {\r\n    slotEntries = { default: props.slots };\r\n  }\r\n\r\n  // Default slot fallback\r\n  if (props.children !== undefined) {\r\n    slotEntries.default = props.children;\r\n  } else if (!slotEntries.default) {\r\n    slotEntries.default = null;\r\n  }\r\n\r\n  // --- AUTO: Create slots from <div data-comp=\"childId\"> ---\r\n  const placeholders = componentFn.el?.querySelectorAll(\"[data-comp]\") || [];\r\n  placeholders.forEach((ph) => {\r\n    const compId = ph.getAttribute(\"data-comp\");\r\n    if (!compId) return;\r\n    const childInstance = getComponentById(+compId);\r\n    if (!childInstance) return;\r\n    // Assign a ref for uniformity\r\n    ph.setAttribute(\"data-ref\", compId);\r\n\r\n    // Use compId as slot key if no explicit slot exists\r\n    if (!slotEntries[compId]) {\r\n      childInstance._fromSlotHydration = true;\r\n      slotEntries[compId] = childInstance({\r\n        ...childInstance._prevProps,\r\n        ...ph.dataset,\r\n      });\r\n      childInstance._fromSlotHydration = false;\r\n    }\r\n  });\r\n\r\n  // console.log(\"hydrateSlots\", slotEntries, componentFn._id);\r\n  // --- INJECT ALL SLOT CONTENT ---\r\n  Object.entries(slotEntries).forEach(([key, value]) => {\r\n    let ntarget;\r\n    // const ntarget = componentFn.refs[key];\r\n\r\n    if (key === \"default\" || key === \"children\") {\r\n      ntarget =\r\n        componentFn.el?.querySelector('[data-ref=\"children\"]') ||\r\n        componentFn.el?.querySelector(\"slot:not([name])\");\r\n    } else {\r\n      ntarget = getRef(componentFn.el, key);\r\n    }\r\n    if (!ntarget || value == null) return;\r\n\r\n    // Ensure/reuse boundary if value is a component\r\n    let boundary = ntarget.querySelector(\r\n      \"[data-comp-root='\" + componentFn._id + \"']\"\r\n    );\r\n    if (!boundary && value && typeof value.mount === \"function\") {\r\n      boundary = document.createElement(\"div\");\r\n      boundary.setAttribute(\"data-comp-root\", componentFn._id);\r\n      ntarget.innerHTML = \"\";\r\n      ntarget.appendChild(boundary);\r\n    }\r\n\r\n    const targetForInjection = boundary || ntarget;\r\n    // console.log(\"Injecting slot content\", key, ntarget.outerHTML, value);\r\n    if (value._id) value._fromSlotHydration = true;\r\n    injectSlotContent(targetForInjection, value, api);\r\n     if (value._id) value._fromSlotHydration = false;\r\n  });\r\n}\r\n", "// hydrateActions.js\r\nexport default function hydrateActions(api, rootEl) {\r\n  if (!rootEl) return;\r\n\r\n  // Find all elements with any data-action-* attribute\r\n  const elements = rootEl.querySelectorAll(\"*\");\r\n  elements.forEach((el) => {\r\n    Array.from(el.attributes).forEach((attr) => {\r\n      if (!attr.name.startsWith(\"data-action-\")) return;\r\n\r\n      const eventType = attr.name.slice(\"data-action-\".length);\r\n      const actionName = attr.value;\r\n      if (!actionName) return;\r\n\r\n      const key = `${eventType}:${actionName}`;\r\n      // Prefer explicit handler already in api.on\r\n      if (typeof api.on[key] === \"function\") return;\r\n\r\n      // Check plain action name in api.on\r\n      if (typeof api.on[actionName] === \"function\") {\r\n        api.on[key] = api.on[actionName].bind(api);\r\n        return;\r\n      }\r\n\r\n      // Otherwise, check instance method\r\n      if (typeof api[actionName] === \"function\") {\r\n        api.on[key] = api[actionName].bind(api);\r\n      }\r\n\r\n    //   console.log(\"Bound action\", key, api.on[key] ? \"found\" : \"not found\");\r\n    });\r\n  });\r\n}\r\n", "export function runHook(cbs, arg, clear = true, context) {\r\n  let result = arg;\r\n\r\n  for (const fn of cbs) {\r\n    try {\r\n      const res = fn.call(context, result);\r\n      if (res !== undefined) result = res;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n  if (clear) cbs.length = 0;\r\n  return result;\r\n}\r\n", "export function runBeforeHook(hookOrArray, next, context) {\r\n  if (Array.isArray(hookOrArray)) {\r\n    let idx = 0;\r\n    function runNext() {\r\n      if (idx < hookOrArray.length) {\r\n        const cb = hookOrArray[idx++];\r\n        try {\r\n          if (cb.length) cb.call(context, runNext);\r\n          else Promise.resolve(cb.call(context)).then(runNext).catch((e) => { console.error(e); runNext(); });\r\n        } catch (e) {\r\n          console.error(e);\r\n          runNext();\r\n        }\r\n      } else {\r\n        next();\r\n      }\r\n    }\r\n    runNext();\r\n  } else if (hookOrArray) {\r\n    try {\r\n      if (hookOrArray.length) hookOrArray.call(context, next);\r\n      else Promise.resolve(hookOrArray.call(context)).then(next).catch((e) => { console.error(e); next(); });\r\n    } catch (e) {\r\n      console.error(e);\r\n      next();\r\n    }\r\n  } else {\r\n    next();\r\n  }\r\n}\r\n", "export function syncInstanceToAPI(instance, componentFn) {\r\n  for (const key of Object.keys(instance)) {\r\n    if (!(key in componentFn)) {\r\n      Object.defineProperty(componentFn, key, {\r\n        get() {\r\n          return instance[key];\r\n        },\r\n        enumerable: true,\r\n      });\r\n    }\r\n  }\r\n}\r\n", "import diffHTML from \"./diffHTML.js\";\r\nimport bindEvents from \"./bindEvents.js\";\r\nimport getRef from \"./get-refs.js\";\r\nimport hydrateSlots from \"./hydrateSlots.js\";\r\nimport hydrateActions from \"./hydrateActions.js\";\r\nimport { runHook } from \"./reactive-core-helpers/runHook.js\";\r\nimport { runBeforeHook } from \"./reactive-core-helpers/runBeforeHook.js\";\r\nimport { syncInstanceToAPI } from \"./reactive-core-helpers/syncInstanceToAPI.js\";\r\n\r\nlet idCounter = 1;\r\n\r\nexport const __VERSION__ = process.env.APP_VERSION || \"\";\r\nexport const globalComponentRegistry = new Map();\r\nexport function registerComponent(inst) {\r\n  if (inst._id) globalComponentRegistry.set(inst._id, inst);\r\n}\r\nexport function unregisterComponent(inst) {\r\n  if (inst._id) globalComponentRegistry.delete(inst._id);\r\n}\r\nexport function getComponentById(id) {\r\n  return globalComponentRegistry.get(id);\r\n}\r\n\r\nlet currentComponent = null;\r\n\r\n// --- INTERNAL: clone a component from a frozen template (no mount yet) ---\r\nfunction __cloneFromTemplate(sourceComp, initialProps = {}) {\r\n  const tpl = sourceComp._frozenTemplate;\r\n  const clone = createComponent(tpl.renderFn, tpl.options);\r\n  clone._initialProps = initialProps;\r\n  clone._templateSource = sourceComp;\r\n  return clone;\r\n}\r\n\r\nexport function createComponent(arg1, arg2 = {}) {\r\n  const isObj =\r\n    typeof arg1 === \"object\" && arg1 !== null && !Array.isArray(arg1);\r\n  const renderFn = isObj ? arg1.render : arg1;\r\n  const options = isObj ? { ...arg1, render: undefined } : { ...arg2 };\r\n\r\n  let {\r\n    state: initialState = {},\r\n    on = {},\r\n    slots = {},\r\n    onMount,\r\n    onUnmount,\r\n    onBeforeMount,\r\n    onBeforeUnmount,\r\n    onUpdate,\r\n    onBeforeRender,\r\n    ...custom\r\n  } = options;\r\n\r\n  let el = null;\r\n  let mounted = false;\r\n  let props = {};\r\n  let prevProps = {};\r\n  let scheduledRenderProps = null;\r\n  let onBeforeMountDone = false;\r\n  let boundEvents = [];\r\n  let state = initialState;\r\n  let _cachedNode = null;\r\n  let _renderedNull = false;\r\n  const originalInitialState = { ...initialState };\r\n  let renderScheduled = false;\r\n\r\n  const setState = (next) => {\r\n    state = typeof next === \"function\" ? next(state) : { ...state, ...next };\r\n    if (!renderScheduled) {\r\n      renderScheduled = true;\r\n      scheduledRenderProps = { ...props };\r\n      queueMicrotask(() => {\r\n        renderScheduled = false;\r\n        componentFn(scheduledRenderProps);\r\n        scheduledRenderProps = null;\r\n      });\r\n    }\r\n  };\r\n\r\n  const api = {\r\n    refs: {},\r\n    on() {},\r\n    setState,\r\n    props,\r\n    _childCallCache: {}, // per-parent render-order child instance cache\r\n    _childCallIndex: 0, // increments every time a child() is called during this render\r\n    isMounted: () => mounted,\r\n    _renderIndex: 0,\r\n    _mountedChildren: [],\r\n    _unmountCbs: [],\r\n    _mountCbs: [],\r\n    _beforeMountCbs: [],\r\n    _updateCbs: [],\r\n    _beforeUnmountCbs: [],\r\n    _beforeRenderCbs: [],\r\n\r\n    // runtime-attachable mount\r\n    onMount(fn) {\r\n      if (fn) this._mountCbs.push(fn);\r\n    },\r\n    // runtime-attachable cleanup\r\n    onUnmount(fn) {\r\n      if (fn) this._unmountCbs.push(fn);\r\n    },\r\n    // runtime-attachable before mount\r\n    onBeforeMount(fn) {\r\n      if (fn) this._beforeMountCbs.push(fn);\r\n    },\r\n    onBeforeUnmount(fn) {\r\n      if (fn) this._beforeUnmountCbs.push(fn);\r\n    },\r\n    // runtime-attachable before mount\r\n    onUpdate(fn) {\r\n      if (fn) this._updateCbs.push(fn);\r\n    },\r\n    // runtime-attachable before html processing post renderFn call\r\n    onBeforeRender(fn) {\r\n      if (fn) this._beforeRenderCbs.push(fn);\r\n    },\r\n\r\n    addEvent(key, handler) {\r\n      this.on[key] = handler;\r\n    },\r\n\r\n    mount(targetOrSelector, initialProps = {}) {\r\n      if (mounted || onBeforeMountDone) {\r\n        //  console.log(\"Component already mounted or mounting in progress\", componentFn._id);\r\n        return;\r\n      }\r\n      let target =\r\n        typeof targetOrSelector === \"string\"\r\n          ? document.querySelector(targetOrSelector)\r\n          : targetOrSelector;\r\n\r\n      if (!target) throw new Error(`No element matches: ${targetOrSelector}`);\r\n\r\n      const proceed = () => {\r\n        onBeforeMountDone = true;\r\n        el = target;\r\n        // console.log(\"Mounting component\", componentFn._id, el);\r\n        // Mark this as a component root for event isolation\r\n        el.setAttribute(\r\n          \"data-comp-root\",\r\n          componentFn._id + \"-\" + (renderFn.name || \"\")\r\n        );\r\n\r\n        props = { ...props, ...initialProps };\r\n        prevProps = { ...props };\r\n        api.props = props;\r\n\r\n        // Attach the component instance for ref lookups\r\n        el._componentInstance = componentFn;\r\n\r\n        if (props.key) el.setAttribute(\"data-key\", props.key);\r\n\r\n        componentFn(props);\r\n\r\n        if (!_renderedNull) {\r\n          mounted = true;\r\n          runHook(api._mountCbs, undefined, false, componentFn);\r\n        }\r\n      };\r\n\r\n      // Execute onBeforeMount callbacks\r\n      runBeforeHook(api._beforeMountCbs, proceed, componentFn);\r\n    },\r\n\r\n    update(input = {}) {\r\n      if (!mounted) return;\r\n      const nextProps = input.props || input;\r\n      if (nextProps.on) Object.assign(this.on, nextProps.on);\r\n\r\n      prevProps = { ...props };\r\n      props = { ...props, ...nextProps };\r\n      api.props = props;\r\n\r\n      // reset data-key if props.key changes\r\n      if (props.key !== prevProps.key) {\r\n        el.setAttribute(\"data-key\", props.key);\r\n      }\r\n\r\n      componentFn(props);\r\n    },\r\n\r\n    render(newProps = {}) {\r\n      props = { ...props, ...newProps };\r\n      api.props = props;\r\n      let phtml =\r\n        typeof renderFn === \"function\"\r\n          ? renderFn.call(componentFn, {\r\n              state,\r\n              setState,\r\n              props,\r\n              refs: api.refs,\r\n            })\r\n          : renderFn;\r\n\r\n      let html = runHook(api._beforeRenderCbs, phtml, false, componentFn);\r\n\r\n      if (html) {\r\n        html = new String(html);\r\n        html._id = componentFn._id;\r\n      }\r\n\r\n      syncInstanceToAPI(api, componentFn);\r\n      return html;\r\n    },\r\n\r\n    _resetInternal: () => {\r\n      api._mountedChildren.forEach((child) => {\r\n        if (child && typeof child.unmount === \"function\") {\r\n          child.unmount();\r\n        }\r\n      });\r\n      api._mountedChildren = [];\r\n      _cachedNode = null;\r\n      _renderedNull = false;\r\n      el = null; // <-- Add this line\r\n      mounted = false;\r\n      onBeforeMountDone = false;\r\n      boundEvents = [];\r\n      props = {};\r\n      prevProps = {};\r\n      state = { ...originalInitialState };\r\n    },\r\n\r\n    unmount() {\r\n      if (!mounted || !el) return;\r\n\r\n      const cleanup = () => {\r\n        if (el.firstChild) {\r\n          _cachedNode = el.firstChild.cloneNode(true);\r\n          el.removeChild(el.firstChild);\r\n        }\r\n\r\n        runHook(api._unmountCbs, undefined, true, componentFn);\r\n\r\n        boundEvents.forEach(({ node, type, listener }) => {\r\n          node.removeEventListener(type, listener);\r\n        });\r\n        boundEvents = [];\r\n\r\n        mounted = false;\r\n        onBeforeMountDone = false;\r\n        _renderedNull = true;\r\n\r\n        unregisterComponent(componentFn); // <-- remove from registry\r\n        if (api._resetInternal) api._resetInternal();\r\n      };\r\n\r\n      runBeforeHook(api._beforeUnmountCbs, cleanup, api);\r\n    },\r\n\r\n    get renderFn() {\r\n      return renderFn;\r\n    },\r\n    get el() {\r\n      return el;\r\n    },\r\n    get state() {\r\n      return state;\r\n    },\r\n  };\r\n\r\n  // Register option lifecycles into arrays\r\n  if (onMount) api.onMount(onMount);\r\n  if (onUnmount) api.onUnmount(onUnmount);\r\n  if (onBeforeMount) api.onBeforeMount(onBeforeMount);\r\n  if (onBeforeUnmount) api.onBeforeUnmount(onBeforeUnmount);\r\n  if (onUpdate) api.onUpdate(onUpdate);\r\n  if (onBeforeRender) api.onBeforeRender(onBeforeRender);\r\n\r\n  // overrides defaults\r\n  Object.assign(api.on, on);\r\n\r\n  api.ref = function (name) {\r\n    return getRef(this.el, name);\r\n  };\r\n\r\n  api.refs = new Proxy(\r\n    {},\r\n    {\r\n      get(_, key) {\r\n        return api.ref(key);\r\n      },\r\n    }\r\n  );\r\n\r\n  function render(currentProps) {\r\n    props = { ...api.props, ...currentProps };\r\n    api.props = props;\r\n\r\n    if (!el || el.isConnected === false) {\r\n      //console.warn(\"Component root element is not connected to the DOM, skipping render:\", componentFn._id, componentFn.renderFn())\r\n      //return;\r\n    }\r\n\r\n    const html = api.render(props);\r\n\r\n    if (html === null || html === \"\") {\r\n      if (!_renderedNull && el && el.firstChild) {\r\n        const realNode = el.firstChild;\r\n        _cachedNode = realNode.cloneNode(true);\r\n        runBeforeHook(\r\n          api._beforeUnmountCbs,\r\n          () => {\r\n            // Remove all child nodes, not just first\r\n            el.innerHTML = \"\";\r\n            boundEvents.forEach(({ node, type, listener }) => {\r\n              node.removeEventListener(type, listener);\r\n            });\r\n            boundEvents = [];\r\n            mounted = false;\r\n            _renderedNull = true;\r\n            runHook(api._unmountCbs, undefined, true, componentFn);\r\n          },\r\n          api\r\n        );\r\n      } else {\r\n        _renderedNull = true;\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (_renderedNull && _cachedNode) {\r\n      el.appendChild(_cachedNode);\r\n      _cachedNode = null;\r\n      _renderedNull = false;\r\n      mounted = true;\r\n      bindEvents(componentFn, el, componentFn.on, boundEvents);\r\n      runHook(api._mountCbs, undefined, false, componentFn);\r\n      return;\r\n    }\r\n\r\n    diffHTML(el, html);\r\n    hydrateSlots(componentFn, props, api, slots);\r\n    hydrateActions(componentFn, el);\r\n\r\n    bindEvents(componentFn, el, componentFn.on, boundEvents);\r\n\r\n    if (mounted) {\r\n      runHook(api._updateCbs, prevProps, false, componentFn);\r\n    }\r\n\r\n    _renderedNull = false;\r\n    return html;\r\n  }\r\n\r\n  let lastHtml = \"\";\r\n  // Create the callable component function\r\n  function componentFn(props = {}) {\r\n    // If we are inside ANOTHER component's render, this is a child call.\r\n    if (\r\n      !componentFn._fromSlotHydration &&\r\n      currentComponent &&\r\n      currentComponent !== componentFn\r\n    ) {\r\n      // Short-circuit: if called from slot hydration, just return instance\r\n\r\n      // Child call inside parent render\r\n      const parent = currentComponent;\r\n      if (parent._childCallIndex == null) parent._childCallIndex = 0;\r\n      if (!parent._childCallCache) parent._childCallCache = {};\r\n      const cacheKey = props.key != null ? props.key : parent._childCallIndex++;\r\n      let inst = parent._childCallCache[cacheKey];\r\n      if (!inst || inst._templateSource !== componentFn) {\r\n        inst = __cloneFromTemplate(componentFn, props);\r\n        inst._prevProps = { ...props };\r\n\r\n        inst.toString = () => {\r\n          return `<div data-comp=\"${inst._id}\"></div>`;\r\n        };\r\n        parent._childCallCache[cacheKey] = inst;\r\n      } else {\r\n        // Always update child instance with latest props\r\n        inst._prevProps = { ...props };\r\n        inst.update(props);\r\n      }\r\n\r\n      return inst;\r\n    }\r\n    // Normal top-level render of THIS component\r\n    currentComponent = componentFn;\r\n    componentFn._renderIndex = 0;\r\n    componentFn._childCallIndex = 0;\r\n    componentFn._prevProps = props;\r\n\r\n    // Reset child call index for this render pass\r\n    lastHtml = componentFn._render(props);\r\n    currentComponent = null;\r\n    return componentFn;\r\n  }\r\n\r\n  // Add toString method to componentFn\r\n\r\n  componentFn.toString = function () {\r\n    // If we haven't produced HTML yet, emit a placeholder wrapper so the parent\r\n    // can locate and mount this instance by ID.\r\n    // But only when within a parent component\r\n    if (\r\n      !lastHtml ||\r\n      (String(lastHtml) === \"\" &&\r\n        !componentFn.isMounted() &&\r\n        currentComponent !== null &&\r\n        currentComponent._id !== componentFn._id)\r\n    ) {\r\n      return String(componentFn._id);\r\n    }\r\n    return lastHtml ? String(lastHtml) : \"\";\r\n  };\r\n\r\n  // Attach API methods\r\n  Object.assign(componentFn, api, custom);\r\n\r\n  // Dynamically attach instance-backed getters\r\n  [\"el\", \"props\", \"state\", \"setState\"].forEach((key) => {\r\n    Object.defineProperty(componentFn, key, {\r\n      get() {\r\n        return api[key];\r\n      },\r\n      enumerable: true,\r\n      configurable: false,\r\n    });\r\n  });\r\n\r\n  componentFn._render = render;\r\n  componentFn.render = api.render;\r\n  componentFn._id = idCounter++;\r\n  componentFn.getId = () => componentFn._id;\r\n  registerComponent(componentFn); // <-- auto register\r\n\r\n  // Freeze a template of the original definition so we can clone later\r\n  componentFn._frozenTemplate = Object.freeze({\r\n    renderFn,\r\n    // use the original options shape but ensure state is not aliased\r\n    options: { ...options, state: { ...originalInitialState } },\r\n  });\r\n\r\n  return componentFn;\r\n}\r\n\r\n// Usage in composables:\r\nexport function useCurrentComponent() {\r\n  return currentComponent;\r\n}\r\n"],
  "mappings": "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",
  "names": ["diffHTML", "el", "newHTML", "temp", "newChildren", "oldChildren", "newKeyed", "oldKeyed", "child", "key", "cursor", "newChild", "currentNode", "existing", "patchElement", "leftover", "last", "fromEl", "toEl", "syncAttributes", "patchChildren", "fromAttrs", "toAttrs", "name", "value", "fromNodes", "toNodes", "max", "i", "fromNode", "toNode", "patchNode", "bindEvents", "api", "el", "on", "boundEvents", "root", "closestWithActionAttr", "startEl", "boundary", "attr", "traverse", "node", "isRoot", "key", "handler", "isColonSyntax", "eventType", "actionOrSelector", "isWildcardEvent", "type", "listener", "e", "actionTarget", "actionValue", "dataArgsRaw", "specificActionAttr", "specificArgsAttr", "actionParts", "actionName", "actionArgs", "parsed", "context", "target", "marker", "child", "refCache", "ref", "boundaryRoot", "name", "cacheForBoundary", "cached", "compEl", "selectors", "isInCurrentBoundary", "el", "nestedRoot", "selector", "found", "allMatches", "slotContentCache", "injectSlotContent", "refNode", "value", "api", "resolved", "parent", "existingNodes", "child", "key", "newNodes", "origItem", "item", "node", "temp", "idx", "fragment", "hydrateSlots", "componentFn", "props", "api", "initialSlots", "slotEntries", "ph", "compId", "childInstance", "getComponentById", "key", "value", "ntarget", "ref", "boundary", "targetForInjection", "injectSlotContent", "hydrateActions", "api", "rootEl", "el", "attr", "eventType", "actionName", "key", "runHook", "cbs", "arg", "clear", "context", "result", "fn", "res", "e", "runBeforeHook", "hookOrArray", "next", "context", "runNext", "idx", "cb", "e", "syncInstanceToAPI", "instance", "componentFn", "key", "idCounter", "__VERSION__", "globalComponentRegistry", "registerComponent", "inst", "unregisterComponent", "getComponentById", "id", "currentComponent", "__cloneFromTemplate", "sourceComp", "initialProps", "tpl", "clone", "createComponent", "arg1", "arg2", "isObj", "renderFn", "options", "initialState", "on", "slots", "onMount", "onUnmount", "onBeforeMount", "onBeforeUnmount", "onUpdate", "onBeforeRender", "custom", "el", "mounted", "props", "prevProps", "scheduledRenderProps", "onBeforeMountDone", "boundEvents", "state", "_cachedNode", "_renderedNull", "originalInitialState", "renderScheduled", "setState", "next", "componentFn", "api", "fn", "key", "handler", "targetOrSelector", "target", "proceed", "runHook", "runBeforeHook", "input", "nextProps", "newProps", "phtml", "html", "syncInstanceToAPI", "child", "cleanup", "node", "type", "listener", "name", "ref", "_", "render", "currentProps", "bindEvents", "diffHTML", "hydrateSlots", "hydrateActions", "lastHtml", "parent", "cacheKey", "useCurrentComponent"]
}
