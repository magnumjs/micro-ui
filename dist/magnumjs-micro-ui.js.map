{
  "version": 3,
  "sources": ["../lib/reactive-core.js", "../lib/outlet.js", "../lib/diffHTML.js", "../lib/bindEvents.js", "../lib/context.js"],
  "sourcesContent": ["import Outlet from \"./outlet.js\";\nimport diffHTML from \"./diffHTML.js\";\nimport bindEvents from \"./bindEvents.js\";\nexport * from \"./context.js\";\nimport { context } from \"./context.js\";\n\nexport function createComponent(\n  renderFn,\n  {\n    state: initialState = {},\n    on = {},\n    onMount,\n    onUnmount,\n    onBeforeMount,\n    onBeforeUnmount,\n    onUpdate,\n  } = {}\n) {\n  let el = null;\n  let mounted = false;\n  let props = {};\n  let prevProps = {};\n  let scheduledRenderProps = null;\n  let onBeforeMountDone = false;\n  let boundEvents = [];\n  let state = initialState;\n  let _cachedNode = null;\n  let _renderedNull = false;\n  const originalInitialState = { ...initialState };\n  let renderScheduled = false;\n  let contextUnsubs = [];\n\n  const setState = (next) => {\n    state = typeof next === \"function\" ? next(state) : { ...state, ...next };\n    if (!renderScheduled) {\n      renderScheduled = true;\n      scheduledRenderProps = { ...props };\n      queueMicrotask(() => {\n        renderScheduled = false;\n        render(scheduledRenderProps);\n        scheduledRenderProps = null;\n      });\n    }\n  };\n\n  const api = {\n    refs: {},\n    setState,\n    props,\n\n    mount(targetOrSelector, initialProps = {}) {\n      if (mounted || onBeforeMountDone) return;\n\n      let target =\n        typeof targetOrSelector === \"string\"\n          ? document.querySelector(targetOrSelector)\n          : targetOrSelector;\n\n      if (!target) throw new Error(`No element matches: ${targetOrSelector}`);\n\n      const proceed = () => {\n        onBeforeMountDone = true;\n        el = target;\n\n        props = { ...props, ...initialProps };\n        prevProps = { ...props };\n        api.props = props;\n\n        render(props);\n        bindEvents(api, el, on, boundEvents); // \u2705 ensure this.el is hydrated before context\n\n        if (!_renderedNull) {\n          mounted = true;\n          onMount?.call(api);\n          setupContextListeners();\n        }\n      };\n\n      runBeforeHook(onBeforeMount, proceed);\n    },\n\n    update(input = {}) {\n      if (!mounted) return;\n      const nextProps = input.props ? input.props : input;\n\n      const newOn = nextProps.on;\n      if (newOn && newOn !== on) {\n        on = newOn;\n      }\n\n      const merged = { ...props, ...nextProps };\n      prevProps = { ...props };\n      props = merged;\n      api.props = props;\n\n      render(props);\n    },\n\n    render(newProps = {}) {\n      props = { ...props, ...newProps };\n      api.props = props;\n      let html =\n        typeof renderFn === \"function\"\n          ? renderFn.call(api, { state, setState, props, refs: api.refs })\n          : renderFn;\n      html = Outlet(html, props);\n      return html;\n    },\n\n    _resetInternal: () => {\n      _cachedNode = null;\n      _renderedNull = false;\n      el = null; // <-- Add this line\n      mounted = false;\n      onBeforeMountDone = false;\n      boundEvents = [];\n      props = {};\n      prevProps = {};\n      state = { ...originalInitialState };\n    },\n\n    unmount() {\n      if (!mounted || !el) return;\n\n      const cleanup = () => {\n        if (el.firstChild) {\n          _cachedNode = el.firstChild.cloneNode(true);\n          el.removeChild(el.firstChild);\n        }\n\n        boundEvents.forEach(({ node, type, listener }) => {\n          node.removeEventListener(type, listener);\n        });\n        boundEvents = [];\n\n        contextUnsubs.forEach((unsub) => unsub());\n        contextUnsubs = [];\n\n        mounted = false;\n        onBeforeMountDone = false;\n        _renderedNull = true;\n        onUnmount?.call(api);\n\n        if (api._resetInternal) api._resetInternal();\n      };\n\n      runBeforeHook(onBeforeUnmount, cleanup);\n    },\n\n    get renderFn() {\n      return renderFn;\n    },\n    get el() {\n      return el;\n    },\n    get state() {\n      return state;\n    },\n  };\n\n  api.ref = function (name) {\n    if (!this.el) return null;\n    return (\n      this.el.querySelector(`[data-ref=\"${name}\"]`) ||\n      this.el.querySelector(name) ||\n      null\n    );\n  };\n\n  api.refs = new Proxy(\n    {},\n    {\n      get(_, key) {\n        return api.ref(key);\n      },\n    }\n  );\n\n  api.action = function (e) {\n    return e.target.closest(\"[data-action]\")?.dataset.action || null;\n  };\n\n  function setupContextListeners() {\n    contextUnsubs = [];\n    Object.entries(on).forEach(([key, handler]) => {\n      if (key.includes(\"::\")) {\n        const bound = handler.bind(api);\n        const unsub = context.subscribe(key, bound);\n        contextUnsubs.push(unsub);\n      }\n    });\n  }\n\n  function render(currentProps) {\n    props = currentProps;\n    api.props = props;\n\n    const html = api.render(props);\n\n    if (html === null || html === \"\") {\n      if (!_renderedNull && el && el.firstChild) {\n        const realNode = el.firstChild;\n        _cachedNode = realNode.cloneNode(true);\n        runBeforeHook(onBeforeUnmount, () => {\n          // Remove all child nodes, not just first\n          el.innerHTML = \"\";\n          boundEvents.forEach(({ node, type, listener }) => {\n            node.removeEventListener(type, listener);\n          });\n          boundEvents = [];\n          mounted = false;\n          _renderedNull = true;\n          onUnmount?.call(api);\n        });\n      } else {\n        _renderedNull = true;\n      }\n      return;\n    }\n\n    if (_renderedNull && _cachedNode) {\n      el.appendChild(_cachedNode);\n      _cachedNode = null;\n      _renderedNull = false;\n      mounted = true;\n      bindEvents(api, el, on, boundEvents);\n      onMount?.call(api);\n      return;\n    }\n\n    _renderedNull = false;\n\n    diffHTML(el, html);\n\n    bindEvents(api, el, on, boundEvents);\n\n    if (mounted && onUpdate) {\n      onUpdate.call(api, prevProps);\n    }\n  }\n\n  function runBeforeHook(hook, next) {\n    if (hook) {\n      if (hook.length) hook.call(api, next);\n      else Promise.resolve(hook.call(api)).then(next);\n    } else {\n      next();\n    }\n  }\n\n  return api;\n}\nexport function renderList(\n  array,\n  renderFn,\n  keyFn = (item) => item.id ?? item.key ?? item\n) {\n  return array\n    .map((item, index) => {\n      const key = keyFn(item, index);\n      const inner = renderFn(item, index);\n      // Only add data-key if inner is string and starts with a tag\n      if (typeof inner === \"string\") {\n        return inner.replace(\n          /^<([a-zA-Z0-9-]+)/,\n          `<$1 data-key=\"${String(key).replace(/\"/g, \"&quot;\")}\"`\n        );\n      }\n      return inner;\n    })\n    .join(\"\");\n}\n", "export default function Outlet(html, props = {}) {\n  if (typeof html !== \"string\") return \"\"; // return empty string if null or non-string\n\n  const { children = {}, slots = {} } = props;\n\n  function getSlotContent(name, fallback) {\n    if (!name) {\n      if (\n        children &&\n        typeof children === \"object\" &&\n        children.default != null\n      ) {\n        return children.default;\n      }\n      if (slots && typeof slots === \"object\" && slots.default != null) {\n        return slots.default;\n      }\n      if (typeof children === \"string\") {\n        return children;\n      }\n      return fallback;\n    }\n\n    if (children && typeof children === \"object\" && children[name] != null) {\n      return children[name];\n    }\n    if (slots && typeof slots === \"object\" && slots[name] != null) {\n      return slots[name];\n    }\n    return fallback;\n  }\n\n  html = html.replace(\n    /<slot(?:\\s+name=\"([^\"]+)\")?>([\\s\\S]*?)<\\/slot>/gis,\n    (_, name, fallback) => getSlotContent(name, fallback)\n  );\n\n  html = html.replace(\n    /<([a-z]+)([^>]*)\\sdata-slot=\"([^\"]+)\"([^>]*)>([\\s\\S]*?)<\\/\\1>/gis,\n    (_, tag, before, name, after, fallback) => {\n      const content = getSlotContent(name, fallback);\n      return `<${tag}${before}${after}>${content}</${tag}>`;\n    }\n  );\n\n  return html;\n}\n", "export default function diffHTML(el, newHTML) {\n  if (!el) return false;\n\n  const temp = document.createElement(\"div\");\n  temp.innerHTML = newHTML;\n\n  const newChildren = Array.from(temp.children);\n  const oldChildren = Array.from(el.children);\n\n  const newKeyed = new Map();\n  const oldKeyed = new Map();\n\n  // Index new keyed nodes\n  for (const child of newChildren) {\n    const key = child.dataset.key;\n    if (key) newKeyed.set(key, child);\n  }\n\n  // Index old keyed nodes\n  for (const child of oldChildren) {\n    const key = child.dataset.key;\n    if (key) oldKeyed.set(key, child);\n  }\n\n  let cursor = 0;\n  for (const newChild of newChildren) {\n    const key = newChild.dataset.key;\n    let currentNode = el.children[cursor];\n\n    if (key && oldKeyed.has(key)) {\n      const existing = oldKeyed.get(key);\n\n      // Update inner content only if it changed\n      if (existing.innerHTML !== newChild.innerHTML) {\n        existing.innerHTML = newChild.innerHTML;\n      }\n\n      if (existing !== currentNode) {\n        el.insertBefore(existing, currentNode || null); // \uD83E\uDDE0 move DOM node\n      }\n\n      oldKeyed.delete(key); // \u2705 mark as used\n    } else {\n      // Either unkeyed or new keyed node \u2192 insert new one\n      el.insertBefore(newChild, currentNode || null);\n    }\n\n    cursor++;\n  }\n\n  // Remove leftover keyed nodes that were not reused\n  for (const leftover of oldKeyed.values()) {\n    leftover.remove();\n  }\n\n  // Remove extra unkeyed children if any\n  while (el.children.length > newChildren.length) {\n    el.lastChild.remove();\n  }\n\n  return true;\n}\n", "export default function bindEvents(api, el, on, boundEvents) {\n  if (!el || !on) return;\n  const root = el.firstElementChild;\n  if (!root) return;\n\n  Object.entries(on).forEach(([key, handler]) => {\n    const isColonSyntax = key.includes(\":\");\n    const [eventType, actionOrSelector] = isColonSyntax\n      ? key.split(\":\")\n      : key.split(\" \");\n\n    const isWildcardEvent = eventType === \"*\";\n    const eventsToBind = isWildcardEvent\n      ? [\"click\", \"input\", \"change\", \"keydown\", \"submit\"]\n      : [eventType];\n\n    eventsToBind.forEach((type) => {\n      const listener = (e) => {\n        const actionTarget = e.target.closest(\"[data-action]\");\n        const actionValue = actionTarget?.dataset.action || \"\";\n        const dataArgsRaw = actionTarget?.dataset.args;\n\n        const actionParts = actionValue.split(\":\");\n        const actionName = actionParts[0];\n        let actionArgs = [];\n\n        // Prefer data-args if present\n        if (dataArgsRaw) {\n          try {\n            const parsed = JSON.parse(dataArgsRaw);\n            actionArgs = Array.isArray(parsed) ? parsed : [parsed];\n          } catch (err) {\n            console.warn(\"Invalid JSON in data-args:\", dataArgsRaw);\n          }\n        } else {\n          actionArgs = actionParts.slice(1);\n        }\n\n        const context = {\n          event: e,\n          state: api.state,\n          setState: api.setState,\n          props: api.props,\n          refs: api.refs,\n          action: actionName,\n          args: actionArgs,\n        };\n\n        // Action handler\n        if (isColonSyntax && actionTarget) {\n          const matches =\n            (actionOrSelector === \"*\" || actionOrSelector === actionName) &&\n            (isWildcardEvent || e.type === eventType);\n\n          if (matches) {\n            return handler.call(api, context);\n          }\n        }\n\n        // Fallback to selector-based if no action match\n        if (!isColonSyntax) {\n          const target = e.target.closest(actionOrSelector || \"*\");\n          if (target && root.contains(target)) {\n            return handler.call(api, context);\n          }\n        }\n      };\n\n      const marker = `__microBound_${type}_${key}`;\n      if (!root[marker]) {\n        root.addEventListener(type, listener);\n        root[marker] = true;\n        boundEvents.push({ node: root, type, listener });\n      }\n    });\n  });\n}\n", "export function createState(initial) {\n  let state = initial;\n  const subs = new Set();\n\n  function setState(next) {\n    state = typeof next === \"function\" ? next(state) : { ...state, ...next };\n    subs.forEach((fn) => fn(state));\n  }\n\n  function subscribe(fn) {\n    subs.add(fn);\n    fn(state);\n    return () => subs.delete(fn);\n  }\n\n  function get() {\n    return state;\n  }\n\n  return { get, setState, getState: get, subscribe };\n}\n// Top-level shared pub/sub\nconst channels = new Map();\n\nexport const context = {\n  subscribe(eventName, fn) {\n    if (!channels.has(eventName)) {\n      channels.set(eventName, new Set());\n    }\n    const set = channels.get(eventName);\n    set.add(fn);\n    return () => set.delete(fn);\n  },\n\n  emit(eventName, payload) {\n    const set = channels.get(eventName);\n    if (set) {\n      for (const fn of set) fn(payload);\n    }\n  },\n\n  clear() {\n    channels.clear(); // Optional: useful for testing or full reset\n  },\n};\n\nconst stores = new Map();\n\nexport function shared(key, initial = {}) {\n  if (!stores.has(key)) {\n    const state = createState(initial);\n    const api = {\n      ...state,\n      emit(event, payload) {\n        state.setState(payload);\n        context.emit(`${key}::${event}`, state.getState());\n      },\n      on(event, fn) {\n        return context.subscribe(`${key}::${event}`, fn);\n      },\n    };\n    stores.set(key, api);\n  }\n\n  return stores.get(key);\n}\nshared.clear = () => stores.clear();\n\n"],
  "mappings": "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",
  "names": ["reactive_core_exports", "__export", "context", "createComponent", "createState", "renderList", "shared", "Outlet", "html", "props", "children", "slots", "getSlotContent", "name", "fallback", "_", "tag", "before", "after", "content", "diffHTML", "el", "newHTML", "temp", "newChildren", "oldChildren", "newKeyed", "oldKeyed", "child", "key", "cursor", "newChild", "currentNode", "existing", "leftover", "bindEvents", "api", "el", "on", "boundEvents", "root", "key", "handler", "isColonSyntax", "eventType", "actionOrSelector", "isWildcardEvent", "type", "listener", "e", "actionTarget", "actionValue", "dataArgsRaw", "actionParts", "actionName", "actionArgs", "parsed", "context", "target", "marker", "createState", "initial", "state", "subs", "setState", "next", "fn", "subscribe", "get", "channels", "context", "eventName", "set", "payload", "stores", "shared", "key", "api", "event", "createComponent", "renderFn", "initialState", "on", "onMount", "onUnmount", "onBeforeMount", "onBeforeUnmount", "onUpdate", "el", "mounted", "props", "prevProps", "scheduledRenderProps", "onBeforeMountDone", "boundEvents", "state", "_cachedNode", "_renderedNull", "originalInitialState", "renderScheduled", "contextUnsubs", "setState", "next", "render", "api", "targetOrSelector", "initialProps", "target", "runBeforeHook", "bindEvents", "setupContextListeners", "input", "nextProps", "newOn", "merged", "newProps", "html", "Outlet", "node", "type", "listener", "unsub", "name", "_", "key", "e", "handler", "bound", "context", "currentProps", "diffHTML", "hook", "renderList", "array", "keyFn", "item", "index", "inner"]
}
